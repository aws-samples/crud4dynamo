/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.3.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'antlr'
}

ext {
    antlrConfig = [
            'lib' : 'src/main/antlr/ddbexpressions/',
            // configure the package name for generated source
            'package' : "com.amazon.${rootProject.name}.ddbparser".toString() // a bug in antlr plugin, need to explicitly call toString
    ]
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.7.1"

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    testImplementation 'org.assertj:assertj-core:3.12.2'
    testCompileOnly 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testCompileOnly 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages", "-package", antlrConfig['package'], "-lib", antlrConfig['lib']]
}

// Tasks are useful when leaning
task showSourceSetPath {
    group 'Gradle Hack Tasks'
    description 'Shows path for each source sets'
    doLast {
        // also we can use sourceSets['main'] to lookup source set
        sourceSets.each { st ->
            println "--> SourceSet [${st.name}] with srcDirs ${st.allJava.srcDirs}"
        }
    }
}

test {
    useJUnitPlatform()
}
